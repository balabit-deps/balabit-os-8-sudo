From 712afe03195e9747a442cac633b03dc5c8bfa54c Mon Sep 17 00:00:00 2001
From: "Todd C. Miller" <Todd.Miller@sudo.ws>
Date: Sat, 14 Mar 2020 11:13:55 -0600
Subject: [PATCH] Ignore a failure to restore the RLIMIT_CORE resource limit.
 Linux containers don't allow RLIMIT_CORE to be set back to RLIM_INFINITY if
 we set the limit to zero, even for root.  This is not a problem outside the
 container.

 Note: The original upstream patch includes addition of debug printf
 code which, while harmless, is not necessary for the fix and is not
 visible to end users, so has been excluded to make a more minimal fix.

---
 src/limits.c | 71 ++++++++++++++++++++++++++++++++++++++++++++--------
 1 file changed, 61 insertions(+), 10 deletions(-)

Origin: upstream, https://github.com/sudo-project/sudo/commit/712afe03195e9747a442cac633b03dc5c8bfa54c
Bug: https://github.com/sudo-project/sudo/issues/42
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/sudo/+bug/1857036
Bug-Fedora: https://bugzilla.redhat.com/show_bug.cgi?id=1773148
Reviewed-By: Bryce Harrington <bryce@canonical.com>
Last-Updated: 2020-07-14

--- a/src/limits.c
+++ b/src/limits.c
@@ -136,8 +136,15 @@
     debug_decl(restore_coredump, SUDO_DEBUG_UTIL)
 
     if (coredump_disabled) {
-	if (setrlimit(RLIMIT_CORE, &corelimit) == -1)
-	    sudo_warn("setrlimit(RLIMIT_CORE)");
+	/*
+	 * Linux containers don't allow RLIMIT_CORE to be set back to
+	 * RLIM_INFINITY if we set the limit to zero, even for root.
+	 */
+	if (setrlimit(RLIMIT_CORE, &corelimit) == -1) {
+	    sudo_debug_printf(SUDO_DEBUG_ERROR|SUDO_DEBUG_ERRNO,
+		"setrlimit(RLIMIT_CORE, [%lld, %lld])",
+		(long long)corelimit.rlim_cur, (long long)corelimit.rlim_max);
+	}
 #ifdef __linux__
 	(void) prctl(PR_SET_DUMPABLE, dumpflag, 0, 0, 0);
 #endif /* __linux__ */
@@ -180,8 +187,11 @@
 #ifdef __linux__
     debug_decl(restore_nproc, SUDO_DEBUG_UTIL)
 
-    if (setrlimit(RLIMIT_NPROC, &nproclimit) != 0)
-	sudo_warn("setrlimit(RLIMIT_NPROC)");
+    if (setrlimit(RLIMIT_NPROC, &nproclimit) != 0) {
+	sudo_debug_printf(SUDO_DEBUG_ERROR|SUDO_DEBUG_ERRNO,
+	    "setrlimit(RLIMIT_NPROC, [%lld, %lld])",
+	    (long long)nproclimit.rlim_cur, (long long)nproclimit.rlim_max);
+    }
 
     debug_return;
 #endif /* __linux__ */
